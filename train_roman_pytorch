import os
import torch
import torch.nn as nn
import torch.optim as optim
from torchvision import datasets, transforms, models
from torch.utils.data import DataLoader
# import matplotlib.pyplot as plt

# Set device, Chooses GPU if available, else CPU
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# Paths
train_dir = "C:/Users/DXB/Downloads/AI_PROJECT[1]/AI PROJECT/Dataset/train"

# Image transformations
transform = transforms.Compose([
    transforms.Resize((64, 64)),
    transforms.ToTensor(),
    # mean=0.5, std=0.5, Normalizes tensor to [-1, 1]
    transforms.Normalize([0.5], [0.5])
])

# Dataset and loaders with 80/20 split
full_dataset = datasets.ImageFolder(train_dir, transform=transform)
num_classes = len(full_dataset.classes)
train_size = int(0.8 * len(full_dataset))
val_size = len(full_dataset) - train_size
train_dataset, val_dataset = torch.utils.data.random_split(full_dataset, [train_size, val_size])

train_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)
val_loader = DataLoader(val_dataset, batch_size=32, shuffle=False)

